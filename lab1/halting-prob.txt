
halting-problem:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 4018 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

0000000000001040 <sleep@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    *0x2fda(%rip)        # 4020 <sleep@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	ff 25 a2 2f 00 00    	jmp    *0x2fa2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1056:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001060 <_start>:
    1060:	31 ed                	xor    %ebp,%ebp
    1062:	49 89 d1             	mov    %rdx,%r9
    1065:	5e                   	pop    %rsi
    1066:	48 89 e2             	mov    %rsp,%rdx
    1069:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    106d:	50                   	push   %rax
    106e:	54                   	push   %rsp
    106f:	4c 8d 05 6a 01 00 00 	lea    0x16a(%rip),%r8        # 11e0 <__libc_csu_fini>
    1076:	48 8d 0d 03 01 00 00 	lea    0x103(%rip),%rcx        # 1180 <__libc_csu_init>
    107d:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1145 <main>
    1084:	ff 15 56 2f 00 00    	call   *0x2f56(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    108a:	f4                   	hlt    
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <deregister_tm_clones>:
    1090:	48 8d 3d a1 2f 00 00 	lea    0x2fa1(%rip),%rdi        # 4038 <__TMC_END__>
    1097:	48 8d 05 9a 2f 00 00 	lea    0x2f9a(%rip),%rax        # 4038 <__TMC_END__>
    109e:	48 39 f8             	cmp    %rdi,%rax
    10a1:	74 15                	je     10b8 <deregister_tm_clones+0x28>
    10a3:	48 8b 05 2e 2f 00 00 	mov    0x2f2e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10aa:	48 85 c0             	test   %rax,%rax
    10ad:	74 09                	je     10b8 <deregister_tm_clones+0x28>
    10af:	ff e0                	jmp    *%rax
    10b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10b8:	c3                   	ret    
    10b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010c0 <register_tm_clones>:
    10c0:	48 8d 3d 71 2f 00 00 	lea    0x2f71(%rip),%rdi        # 4038 <__TMC_END__>
    10c7:	48 8d 35 6a 2f 00 00 	lea    0x2f6a(%rip),%rsi        # 4038 <__TMC_END__>
    10ce:	48 29 fe             	sub    %rdi,%rsi
    10d1:	48 89 f0             	mov    %rsi,%rax
    10d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10d8:	48 c1 f8 03          	sar    $0x3,%rax
    10dc:	48 01 c6             	add    %rax,%rsi
    10df:	48 d1 fe             	sar    %rsi
    10e2:	74 14                	je     10f8 <register_tm_clones+0x38>
    10e4:	48 8b 05 05 2f 00 00 	mov    0x2f05(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10eb:	48 85 c0             	test   %rax,%rax
    10ee:	74 08                	je     10f8 <register_tm_clones+0x38>
    10f0:	ff e0                	jmp    *%rax
    10f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <__do_global_dtors_aux>:
    1100:	80 3d 31 2f 00 00 00 	cmpb   $0x0,0x2f31(%rip)        # 4038 <__TMC_END__>
    1107:	75 2f                	jne    1138 <__do_global_dtors_aux+0x38>
    1109:	55                   	push   %rbp
    110a:	48 83 3d e6 2e 00 00 	cmpq   $0x0,0x2ee6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1111:	00 
    1112:	48 89 e5             	mov    %rsp,%rbp
    1115:	74 0c                	je     1123 <__do_global_dtors_aux+0x23>
    1117:	48 8b 3d 12 2f 00 00 	mov    0x2f12(%rip),%rdi        # 4030 <__dso_handle>
    111e:	e8 2d ff ff ff       	call   1050 <__cxa_finalize@plt>
    1123:	e8 68 ff ff ff       	call   1090 <deregister_tm_clones>
    1128:	c6 05 09 2f 00 00 01 	movb   $0x1,0x2f09(%rip)        # 4038 <__TMC_END__>
    112f:	5d                   	pop    %rbp
    1130:	c3                   	ret    
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <frame_dummy>:
    1140:	e9 7b ff ff ff       	jmp    10c0 <register_tm_clones>

0000000000001145 <main>:
    1145:	55                   	push   %rbp
    1146:	48 89 e5             	mov    %rsp,%rbp
    1149:	48 8d 3d b4 0e 00 00 	lea    0xeb4(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1150:	e8 db fe ff ff       	call   1030 <puts@plt>
    1155:	48 8d 3d c5 0e 00 00 	lea    0xec5(%rip),%rdi        # 2021 <_IO_stdin_used+0x21>
    115c:	e8 cf fe ff ff       	call   1030 <puts@plt>
    --------------------------------------------------------------
    1161:	bf a0 86 01 00       	mov    $0x186a0,%edi
    -------------------------------------------------------------
    1166:	e8 d5 fe ff ff       	call   1040 <sleep@plt>
    116b:	48 8d 3d cc 0e 00 00 	lea    0xecc(%rip),%rdi        # 203e <_IO_stdin_used+0x3e>
    1172:	e8 b9 fe ff ff       	call   1030 <puts@plt>
    1177:	b8 00 00 00 00       	mov    $0x0,%eax
    117c:	5d                   	pop    %rbp
    117d:	c3                   	ret    
    117e:	66 90                	xchg   %ax,%ax

0000000000001180 <__libc_csu_init>:
    1180:	41 57                	push   %r15
    1182:	49 89 d7             	mov    %rdx,%r15
    1185:	41 56                	push   %r14
    1187:	49 89 f6             	mov    %rsi,%r14
    118a:	41 55                	push   %r13
    118c:	41 89 fd             	mov    %edi,%r13d
    118f:	41 54                	push   %r12
    1191:	4c 8d 25 50 2c 00 00 	lea    0x2c50(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1198:	55                   	push   %rbp
    1199:	48 8d 2d 50 2c 00 00 	lea    0x2c50(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    11a0:	53                   	push   %rbx
    11a1:	4c 29 e5             	sub    %r12,%rbp
    11a4:	48 83 ec 08          	sub    $0x8,%rsp
    11a8:	e8 53 fe ff ff       	call   1000 <_init>
    11ad:	48 c1 fd 03          	sar    $0x3,%rbp
    11b1:	74 1b                	je     11ce <__libc_csu_init+0x4e>
    11b3:	31 db                	xor    %ebx,%ebx
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	4c 89 fa             	mov    %r15,%rdx
    11bb:	4c 89 f6             	mov    %r14,%rsi
    11be:	44 89 ef             	mov    %r13d,%edi
    11c1:	41 ff 14 dc          	call   *(%r12,%rbx,8)
    11c5:	48 83 c3 01          	add    $0x1,%rbx
    11c9:	48 39 dd             	cmp    %rbx,%rbp
    11cc:	75 ea                	jne    11b8 <__libc_csu_init+0x38>
    11ce:	48 83 c4 08          	add    $0x8,%rsp
    11d2:	5b                   	pop    %rbx
    11d3:	5d                   	pop    %rbp
    11d4:	41 5c                	pop    %r12
    11d6:	41 5d                	pop    %r13
    11d8:	41 5e                	pop    %r14
    11da:	41 5f                	pop    %r15
    11dc:	c3                   	ret    
    11dd:	0f 1f 00             	nopl   (%rax)

00000000000011e0 <__libc_csu_fini>:
    11e0:	c3                   	ret    

Disassembly of section .fini:

00000000000011e4 <_fini>:
    11e4:	48 83 ec 08          	sub    $0x8,%rsp
    11e8:	48 83 c4 08          	add    $0x8,%rsp
    11ec:	c3                   	ret    


------------------------------------------------------------------------------

guesser:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	call   *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	push   0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmp    *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 e2 2f 00 00    	jmp    *0x2fe2(%rip)        # 4018 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

0000000000001040 <printf@plt>:
    1040:	ff 25 da 2f 00 00    	jmp    *0x2fda(%rip)        # 4020 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

0000000000001050 <close@plt>:
    1050:	ff 25 d2 2f 00 00    	jmp    *0x2fd2(%rip)        # 4028 <close@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

0000000000001060 <read@plt>:
    1060:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4030 <read@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <.plt>

0000000000001070 <open@plt>:
    1070:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4038 <open@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <.plt>

0000000000001080 <__isoc99_scanf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4040 <__isoc99_scanf@GLIBC_2.7>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

0000000000001090 <__cxa_finalize@plt>:
    1090:	ff 25 62 2f 00 00    	jmp    *0x2f62(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1096:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	31 ed                	xor    %ebp,%ebp
    10a2:	49 89 d1             	mov    %rdx,%r9
    10a5:	5e                   	pop    %rsi
    10a6:	48 89 e2             	mov    %rsp,%rdx
    10a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10ad:	50                   	push   %rax
    10ae:	54                   	push   %rsp
    10af:	4c 8d 05 da 01 00 00 	lea    0x1da(%rip),%r8        # 1290 <__libc_csu_fini>
    10b6:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 1230 <__libc_csu_init>
    10bd:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1185 <main>
    10c4:	ff 15 16 2f 00 00    	call   *0x2f16(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ca:	f4                   	hlt    
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 81 2f 00 00 	lea    0x2f81(%rip),%rdi        # 4058 <__TMC_END__>
    10d7:	48 8d 05 7a 2f 00 00 	lea    0x2f7a(%rip),%rax        # 4058 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 ee 2e 00 00 	mov    0x2eee(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmp    *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 51 2f 00 00 	lea    0x2f51(%rip),%rdi        # 4058 <__TMC_END__>
    1107:	48 8d 35 4a 2f 00 00 	lea    0x2f4a(%rip),%rsi        # 4058 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    0x2ec5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmp    *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	80 3d 11 2f 00 00 00 	cmpb   $0x0,0x2f11(%rip)        # 4058 <__TMC_END__>
    1147:	75 2f                	jne    1178 <__do_global_dtors_aux+0x38>
    1149:	55                   	push   %rbp
    114a:	48 83 3d a6 2e 00 00 	cmpq   $0x0,0x2ea6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1151:	00 
    1152:	48 89 e5             	mov    %rsp,%rbp
    1155:	74 0c                	je     1163 <__do_global_dtors_aux+0x23>
    1157:	48 8b 3d f2 2e 00 00 	mov    0x2ef2(%rip),%rdi        # 4050 <__dso_handle>
    115e:	e8 2d ff ff ff       	call   1090 <__cxa_finalize@plt>
    1163:	e8 68 ff ff ff       	call   10d0 <deregister_tm_clones>
    1168:	c6 05 e9 2e 00 00 01 	movb   $0x1,0x2ee9(%rip)        # 4058 <__TMC_END__>
    116f:	5d                   	pop    %rbp
    1170:	c3                   	ret    
    1171:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	e9 7b ff ff ff       	jmp    1100 <register_tm_clones>

0000000000001185 <main>:
    1185:	55                   	push   %rbp
    1186:	48 89 e5             	mov    %rsp,%rbp
    1189:	48 83 ec 10          	sub    $0x10,%rsp
    118d:	be ff ff ff ff       	mov    $0xffffffff,%esi
    1192:	48 8d 3d 6f 0e 00 00 	lea    0xe6f(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    1199:	b8 00 00 00 00       	mov    $0x0,%eax
    119e:	e8 9d fe ff ff       	call   1040 <printf@plt>
    11a3:	be 00 00 00 00       	mov    $0x0,%esi
    11a8:	48 8d 3d 91 0e 00 00 	lea    0xe91(%rip),%rdi        # 2040 <_IO_stdin_used+0x40>
    11af:	b8 00 00 00 00       	mov    $0x0,%eax
    11b4:	e8 b7 fe ff ff       	call   1070 <open@plt>
    11b9:	89 45 fc             	mov    %eax,-0x4(%rbp)
    11bc:	48 8d 4d f8          	lea    -0x8(%rbp),%rcx
    11c0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11c3:	ba 04 00 00 00       	mov    $0x4,%edx
    11c8:	48 89 ce             	mov    %rcx,%rsi
    11cb:	89 c7                	mov    %eax,%edi
    11cd:	b8 00 00 00 00       	mov    $0x0,%eax
    11d2:	e8 89 fe ff ff       	call   1060 <read@plt>
    11d7:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11da:	89 c7                	mov    %eax,%edi
    11dc:	b8 00 00 00 00       	mov    $0x0,%eax
    11e1:	e8 6a fe ff ff       	call   1050 <close@plt>
    11e6:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    11ea:	48 89 c6             	mov    %rax,%rsi
    11ed:	48 8d 3d 59 0e 00 00 	lea    0xe59(%rip),%rdi        # 204d <_IO_stdin_used+0x4d>
    11f4:	b8 00 00 00 00       	mov    $0x0,%eax
    11f9:	e8 82 fe ff ff       	call   1080 <__isoc99_scanf@plt>
    11fe:	8b 55 f4             	mov    -0xc(%rbp),%edx
    1201:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1204:	39 c2                	cmp    %eax,%edx
    1206:	75 0e                	jne    1216 <main+0x91>
    1208:	48 8d 3d 41 0e 00 00 	lea    0xe41(%rip),%rdi        # 2050 <_IO_stdin_used+0x50>
    120f:	e8 1c fe ff ff       	call   1030 <puts@plt>
    1214:	eb 0c                	jmp    1222 <main+0x9d>
    1216:	48 8d 3d 46 0e 00 00 	lea    0xe46(%rip),%rdi        # 2063 <_IO_stdin_used+0x63>
    121d:	e8 0e fe ff ff       	call   1030 <puts@plt>
    1222:	b8 00 00 00 00       	mov    $0x0,%eax
    1227:	c9                   	leave  
    1228:	c3                   	ret    
    1229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001230 <__libc_csu_init>:
    1230:	41 57                	push   %r15
    1232:	49 89 d7             	mov    %rdx,%r15
    1235:	41 56                	push   %r14
    1237:	49 89 f6             	mov    %rsi,%r14
    123a:	41 55                	push   %r13
    123c:	41 89 fd             	mov    %edi,%r13d
    123f:	41 54                	push   %r12
    1241:	4c 8d 25 a0 2b 00 00 	lea    0x2ba0(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1248:	55                   	push   %rbp
    1249:	48 8d 2d a0 2b 00 00 	lea    0x2ba0(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1250:	53                   	push   %rbx
    1251:	4c 29 e5             	sub    %r12,%rbp
    1254:	48 83 ec 08          	sub    $0x8,%rsp
    1258:	e8 a3 fd ff ff       	call   1000 <_init>
    125d:	48 c1 fd 03          	sar    $0x3,%rbp
    1261:	74 1b                	je     127e <__libc_csu_init+0x4e>
    1263:	31 db                	xor    %ebx,%ebx
    1265:	0f 1f 00             	nopl   (%rax)
    1268:	4c 89 fa             	mov    %r15,%rdx
    126b:	4c 89 f6             	mov    %r14,%rsi
    126e:	44 89 ef             	mov    %r13d,%edi
    1271:	41 ff 14 dc          	call   *(%r12,%rbx,8)
    1275:	48 83 c3 01          	add    $0x1,%rbx
    1279:	48 39 dd             	cmp    %rbx,%rbp
    127c:	75 ea                	jne    1268 <__libc_csu_init+0x38>
    127e:	48 83 c4 08          	add    $0x8,%rsp
    1282:	5b                   	pop    %rbx
    1283:	5d                   	pop    %rbp
    1284:	41 5c                	pop    %r12
    1286:	41 5d                	pop    %r13
    1288:	41 5e                	pop    %r14
    128a:	41 5f                	pop    %r15
    128c:	c3                   	ret    
    128d:	0f 1f 00             	nopl   (%rax)

0000000000001290 <__libc_csu_fini>:
    1290:	c3                   	ret    

Disassembly of section .fini:

0000000000001294 <_fini>:
    1294:	48 83 ec 08          	sub    $0x8,%rsp
    1298:	48 83 c4 08          	add    $0x8,%rsp
    129c:	c3                   	ret    
